/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.mobiletopc.filetransfer;


import java.awt.Color;
import java.awt.Cursor;
import java.awt.Dialog.ModalityType;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.net.InetAddress;
import java.net.InetSocketAddress;
import java.net.NetworkInterface;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Enumeration;
import java.util.List;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.zip.ZipEntry;
import java.util.zip.ZipOutputStream;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;


/**
 *
 * @author VENUGOPAL-ACER
 */
public class MobileTOPC_Frame_1 extends javax.swing.JFrame {

    
     static String mobileIP="not found";
      static String pcIP="not found";
      ServerSocket serverSocket=null;
      
    /**
     * Creates new form MobileTOPC_Frame_1
     */
    public MobileTOPC_Frame_1() throws SocketException {
        
        initComponents();
        jPanel1.setVisible(false);
        jPanel3.setVisible(false);
      
        
        
        
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTextField2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setResizable(false);

        jTextField2.setEnabled(false);
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jLabel3.setText("PC IP");

        jLabel4.setText("Mobile IP");

        jTextField3.setEnabled(false);

        jLabel1.setText("Received files location:");

        jTextField4.setEditable(false);
        jTextField4.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N

        jButton5.setText("Send files");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField4))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(92, 92, 92)
                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(38, 38, 38)
                                .addComponent(jLabel4)
                                .addGap(29, 29, 29)
                                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 109, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9))
        );

        jButton4.setText("connect");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jTextField1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jTextField1.setForeground(new java.awt.Color(0, 0, 153));
        jTextField1.setToolTipText("Enter the Mobile IP from your mobile screen");

        jLabel5.setText("Mobile IP");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(140, 140, 140)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(98, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                .addGap(18, 18, 18))
        );

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Sending files. Please wait..");

        jLabel6.setIcon(new javax.swing.ImageIcon("C:\\Users\\VENUGOPAL-ACER\\Desktop\\MnyxU.gif")); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(55, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(54, 54, 54))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(34, 34, 34))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(79, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(44, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        String enteredIP=jTextField1.getText();
        System.out.println("Entered IP:"+enteredIP);
        boolean resultvalidip=validateIpAddress(enteredIP);
        System.out.println("Is enteredIP valid:"+resultvalidip);
        if(!resultvalidip)
        {
             JOptionPane.showMessageDialog(this,"You have entered Wrong IP address , Please enter valid IP address from mobile screen");  
        }
        if(resultvalidip)
        {
            // if Ip is grammatically correct, then check if the host is reachable
            boolean validhost=isIpReachable(enteredIP,2000);
            System.out.println("Is host reachabble:"+validhost);
            if(!validhost)
            {
                 JOptionPane.showMessageDialog(this,"Mobile device is not reachable,please make sure PC is connected to mobile hotspot");  
            }else
            {
                //Do a socket test and get PC IP address
                mobileIP=enteredIP;
                System.out.println("Setting PCIP..");
                jPanel1.setVisible(true);
                jPanel2.setVisible(false);
                Socket testsocket=new Socket();
               // OutputStream outputStream=null;
                InputStream inputStream=null;
                ObjectInputStream objectInputStream=null;
                //ObjectOutputStream objectOutputStream=null;
                try{
                    
                    testsocket.bind(null);
                    
                    testsocket.connect(new InetSocketAddress(enteredIP, 7777));
                    System.out.println("Connected to "+enteredIP);
                    //  outputStream = testsocket.getOutputStream();
                      inputStream=testsocket.getInputStream();
                      objectInputStream=new ObjectInputStream(inputStream);
                     // objectOutputStream = new ObjectOutputStream(outputStream);
                     //delay thread y 1.5s so that values are written to stream in mobile
                     Thread.sleep(1500);
                     pcIP=objectInputStream.readUTF();
                     System.out.println("My device IP:"+pcIP);
                     jTextField2.setText(pcIP);
                     jTextField3.setText(mobileIP);
                      //start receiver thread
                     ReceiveThread receiveThread=new ReceiveThread();
                     Thread receiver=new Thread(receiveThread);
                     receiver.start();
                     
                    
                    
                }
                catch(Exception e)
                {
                    System.out.println(e);
                     JOptionPane.showMessageDialog(this,e.getMessage());  
                }
                finally
                {
                    try{
                      //  inputStream.close();
                      //outputStream.close();
                      
                    testsocket.close();
                    System.out.println("Cleaned socket");
                    }catch(Exception e)
                      {
                     JOptionPane.showMessageDialog(this,e.getMessage());  
                      }
                    
                }
                
                
                
                
            }
            
            
            
            
        }
        
        jTextField4.setText( System.getProperty("user.dir"));
        
        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        
        
        
            jButton5.setText("Choose files to send");
            jButton5.setEnabled(false);
           
            
            JFileChooser chooser=new JFileChooser();

            chooser.setMultiSelectionEnabled(true);
            chooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
             jButton5.setText("Sending files...Please wait");
             
             
             jPanel3.setVisible(true);
             jPanel1.setVisible(false);
            
           
            
            chooser.showOpenDialog(null);
             File[] files = chooser.getSelectedFiles();
     for(int i=0;i<files.length;i++){
             
        Socket socket = new Socket();
        try{


           // String serverAddress="192.168.43.1";
           
           
            socket.bind(null);
            System.out.println("Connecting to PC:"+mobileIP);
            socket.connect(new InetSocketAddress(mobileIP, 9999));

            OutputStream outputStream = socket.getOutputStream();
            ObjectOutputStream objectOutputStream = new ObjectOutputStream(outputStream);

            
           
            File f=f = files[i];
            //whatif no file is selected
            if(f.isDirectory())
            {
              JOptionPane.showMessageDialog(this,f.getName()+" Selected file is folder,please select files"); 
              continue;
            }
            // is a file 
            
            
            long filesize= f.length();

            System.out.println(filesize+" "+f.getName());
            objectOutputStream.writeLong(filesize);
            objectOutputStream.flush();
            objectOutputStream.writeUTF(f.getName());
            objectOutputStream.flush();

            int len = 0;
            
            byte buf[] = new byte[8192];


            InputStream inputStream =new FileInputStream(f);

            while ((len = inputStream.read(buf)) != -1) {
                objectOutputStream.write(buf, 0, len);
                objectOutputStream.flush();
                
                
            }
            
            inputStream.close();
             System.out.println("files sent."+f.getName());
            




            objectOutputStream.close();
            socket.close();
           

        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            if (socket.isConnected()) {
                try {
                    socket.close();
                } catch (Exception e) {
                    e.printStackTrace();
                }
                    
                  jButton5.setEnabled(true);
                  jButton5.setText("Send");
                 
            }
            
         
            
        }
     }
     
                     jPanel3.setVisible(false);
                     jPanel1.setVisible(true);
                
        
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    //check if host with Ip is reachable
    public boolean isIpReachable(String ip, int timeout){
    boolean state = false;

    try {
        state = InetAddress.getByName(ip).isReachable(timeout);
    } catch (IOException e) {
        //Parse error here
    }

    return state;
}
    
    
    //method to check if IP address is valid or not
      public static boolean validateIpAddress(String ipAddress) {
    boolean b1 = false;
    StringTokenizer t = new StringTokenizer(ipAddress, ".");
    int a = Integer.parseInt(t.nextToken());
    int b = Integer.parseInt(t.nextToken());
    int c = Integer.parseInt(t.nextToken());
    int d = Integer.parseInt(t.nextToken());
    if ((a >= 0 && a <= 255) && (b >= 0 && b <= 255)
        && (c >= 0 && c <= 255) && (d >= 0 && d <= 255))
      b1 = true;
    return b1;
  }
    
    
    //method to check if we are running as admin or not
      public static boolean isAdmin() {
    String groups[] = (new com.sun.security.auth.module.NTSystem()).getGroupIDs();
    for (String group : groups) {
        if (group.equals("S-1-5-32-544"))
            return true;
    }
    return false;
}
    
    
     
      
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws SocketException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MobileTOPC_Frame_1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MobileTOPC_Frame_1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MobileTOPC_Frame_1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MobileTOPC_Frame_1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            
            
            public void run() {
                try {
                  MobileTOPC_Frame_1 f1=  new MobileTOPC_Frame_1();
                  f1.setVisible(true);
                 
                  
                    
        
                } catch (SocketException ex) {
                    Logger.getLogger(MobileTOPC_Frame_1.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
        /// get and set PC IP
        
       
        
       
    }
    
    
     class ReceiveThread implements Runnable
    {
        @Override
        public void run() {
            
            System.out.println("Receiver thread started..");
            try {
                serverSocket = new ServerSocket(8888);
            } catch (IOException e) {
                e.printStackTrace();
            }
            Socket receivesocket=null;
            while(true) {
                try {

                    receivesocket = serverSocket.accept();
                    System.out.println("Accepted connection");
                    
                    byte buf[] = new byte[8192];
                    int len = 0;
                    InputStream inputStream = null;
                    ObjectInputStream objectInputStream = null;
                    inputStream = receivesocket.getInputStream();
                    objectInputStream = new ObjectInputStream(inputStream);
                    long filesize = objectInputStream.readLong();
                    String filename = objectInputStream.readUTF();


                    File file = new File( filename);
                    OutputStream outputStream = new FileOutputStream(file);

                   
                    while (filesize > 0 &&
                            (len = objectInputStream.read(buf, 0, (int) Math.min(buf.length, filesize))) != -1) {

                        outputStream.write(buf, 0, len);
                        outputStream.flush();

                        filesize = filesize - len;


                    }
                    outputStream.flush();
                    outputStream.close();
                    objectInputStream.close();
                    System.out.println("File received"+file.getAbsolutePath());

                } catch (Exception e) {

                } finally {
                    try {
                        receivesocket.close();
                    } catch (IOException e) {
                        e.printStackTrace();
                    }

                }


            }

        }
    }

    
    
    
    
   
   
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    // End of variables declaration//GEN-END:variables
}
